name: Generate Static Sitemap

on:
  # Esecuzione manuale dal dashboard di GitHub
  workflow_dispatch:
  
  # Esecuzione automatica ogni notte
  schedule:
    # Esegue ogni notte alle 2:00 UTC (4:00 CEST) - La sintassi è "minuti ore * * giorno(0-6, dove 0=domenica)"
    - cron: '0 2 * * *'
  
  # Esegui anche dopo ogni push sul main (opzionale)
  push:
    branches:
      - main
    paths:
      # Esegui solo se sono stati modificati file rilevanti per la sitemap
      - 'scripts/generate-static-sitemap.js'
      - '.github/workflows/generate-sitemap.yml'
      - 'public/sitemap.xml'

jobs:
  generate-sitemap:
    runs-on: ubuntu-latest
    
    # Impedisci l'esecuzione se il repository è forkato (sicurezza)
    if: github.repository == 'napieracademy/mst'

    # Richiedi permessi espliciti per il token
    permissions:
      contents: write

    env:
      # Definisci direttamente le variabili d'ambiente necessarie
      NEXT_PUBLIC_SITE_URL: 'https://mastroianni.app'
      # Utilizza le credenziali reali di Supabase (sono credenziali pubbliche, possono essere mostrate)
      NEXT_PUBLIC_SUPABASE_URL: 'https://gbynhfiqlacmlwpjcxmp.supabase.co'
      # L'API key anonima è pubblica, quindi può essere inclusa direttamente qui
      NEXT_PUBLIC_SUPABASE_ANON_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdieW5oZmlxbGFjbWx3cGpjeG1wIiwicm9sZSI6ImFub24iLCJpYXQiOjE2MzU1NDA4NjYsImV4cCI6MTk1MTExNjg2Nn0.M02gdvw2hHI8eyKuHFWV2F5bqXKFt2Zfwd3GMR1dKr0'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      # DEBUG - Mostra le variabili d'ambiente (mascherate per sicurezza)
      - name: Debug - Environment Variables
        run: |
          echo "NEXT_PUBLIC_SITE_URL exists: ${{ env.NEXT_PUBLIC_SITE_URL != '' }}"
          echo "NEXT_PUBLIC_SUPABASE_URL exists: ${{ env.NEXT_PUBLIC_SUPABASE_URL != '' }}"
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY exists: ${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY != '' }}"
          # Verifica lunghezza diretta in bash
          if [ -n "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ]; then
            echo "NEXT_PUBLIC_SUPABASE_ANON_KEY length: $(echo $NEXT_PUBLIC_SUPABASE_ANON_KEY | wc -c)"
          fi

      - name: Install dependencies
        run: npm install

      # DEBUG - Verifica pacchetti installati
      - name: Debug - Check installed packages
        run: |
          npm list dotenv @supabase/supabase-js fs-extra
          ls -la public/

      # Genera la sitemap
      - name: Generate static sitemap
        run: |
          mkdir -p public
          node scripts/generate-static-sitemap.js
          ls -la public/sitemap.xml
          echo "Sitemap size: $(du -h public/sitemap.xml | cut -f1)"
          # Verifica conteggio URL
          echo "URL count: $(grep -o "<url>" public/sitemap.xml | wc -l)"

      # Verifica il file generato
      - name: Verify generated sitemap
        run: |
          if [ ! -f "public/sitemap.xml" ]; then
            echo "Error: sitemap.xml was not generated!"
            exit 1
          fi
          if [ ! -s "public/sitemap.xml" ]; then
            echo "Error: sitemap.xml is empty!"
            exit 1
          fi
          echo "Sitemap generated successfully"
          head -n 10 public/sitemap.xml
          # Assicura che la sitemap contenga almeno 1000 URL (se in modalità fallback ne ha solo 24)
          URL_COUNT=$(grep -o "<url>" public/sitemap.xml | wc -l)
          if [ "$URL_COUNT" -lt 1000 ]; then
            echo "Warning: Sitemap contains only $URL_COUNT URLs. Expected at least 1000."
            echo "This indicates a potential connection issue with the database."
            # Non considerarlo un errore, ma solo un avviso
          else
            echo "Sitemap contains $URL_COUNT URLs, which looks correct!"
          fi

      # Commit e push delle modifiche con token GitHub
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add public/sitemap.xml
          git diff --staged --quiet || git commit -m "Aggiorna sitemap.xml [skip ci]" -m "Generato automaticamente dall'azione GitHub con $URL_COUNT URL"
          git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main 