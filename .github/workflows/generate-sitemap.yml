name: Generate Static Sitemap

on:
  # Esecuzione manuale dal dashboard di GitHub
  workflow_dispatch:
  
  # Esecuzione automatica ogni notte
  schedule:
    # Esegue ogni notte alle 2:00 UTC (4:00 CEST) - La sintassi è "minuti ore * * giorno(0-6, dove 0=domenica)"
    - cron: '0 2 * * *'
  
  # Esegui anche dopo ogni push sul main (opzionale)
  push:
    branches:
      - main
    paths:
      # Esegui solo se sono stati modificati file rilevanti per la sitemap
      - 'scripts/generate-static-sitemap.js'
      - '.github/workflows/generate-sitemap.yml'
      - 'public/sitemap.xml'

jobs:
  generate-sitemap:
    runs-on: ubuntu-latest
    
    # Impedisci l'esecuzione se il repository è forkato (sicurezza)
    if: github.repository == 'napieracademy/mst'

    # Richiedi permessi espliciti per il token
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Scarica l'intera history per gestire meglio i conflitti

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      # DEBUG - Mostra le variabili d'ambiente (mascherate per sicurezza)
      - name: Debug - Environment Variables
        run: |
          echo "NEXT_PUBLIC_SITE_URL exists: ${{ env.NEXT_PUBLIC_SITE_URL != '' }}"
          echo "NEXT_PUBLIC_SUPABASE_URL exists: ${{ env.NEXT_PUBLIC_SUPABASE_URL != '' }}"
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY exists: ${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY != '' }}"
          
          # Verifica che le credenziali non siano vuote
          if [ -z "${{ env.NEXT_PUBLIC_SUPABASE_URL }}" ]; then
            echo "Error: NEXT_PUBLIC_SUPABASE_URL is empty"
            exit 1
          fi
          
          if [ -z "${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" ]; then
            echo "Error: NEXT_PUBLIC_SUPABASE_ANON_KEY is empty"
            exit 1
          fi

      - name: Install dependencies
        run: npm install

      # DEBUG - Verifica pacchetti installati
      - name: Debug - Check installed packages
        run: |
          npm list dotenv @supabase/supabase-js fs-extra
          ls -la public/

      # Genera la sitemap passando i secrets direttamente allo script
      - name: Generate static sitemap
        run: |
          mkdir -p public
          NEXT_PUBLIC_SITE_URL=https://mastroianni.app \
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} \
          node scripts/generate-static-sitemap.js
          ls -la public/sitemap.xml
          echo "Sitemap size: $(du -h public/sitemap.xml | cut -f1)"

      # Verifica il file generato
      - name: Verify generated sitemap
        run: |
          if [ ! -f "public/sitemap.xml" ]; then
            echo "Error: sitemap.xml was not generated!"
            exit 1
          fi
          if [ ! -s "public/sitemap.xml" ]; then
            echo "Error: sitemap.xml is empty!"
            exit 1
          fi
          echo "Sitemap generated successfully"
          head -n 10 public/sitemap.xml

      # Commit e push delle modifiche con token GitHub e gestione dei conflitti
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          
          # Aggiungiamo solo il file sitemap.xml
          git add public/sitemap.xml
          
          # Verifichiamo se ci sono modifiche da committare
          if git diff --staged --quiet; then
            echo "No changes to commit for sitemap.xml"
            exit 0
          fi
          
          # Committiamo le modifiche
          git commit -m "Aggiorna sitemap.xml [skip ci]" -m "Generato automaticamente dall'azione GitHub"
          
          # Pull prima di push per gestire eventuali conflitti
          git pull --rebase origin main
          
          # Push con le modifiche integrate
          git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
